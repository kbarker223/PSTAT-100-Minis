---
title: 'Mini Project 1'
subtitle: "PSTAT100: Data Science Concepts and Analysis" 

author: "Kai Barker"
format: 
 pdf:
    latex_engine: xelatex
    geometry: "letterpaper, margin=0.3in"
    code-fold: true
    code-line-numbers: true
    code-copy: true
    code-tools: true
    self-contained: true
    toc: false
    toc-location: left
    number-sections: true
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(message =  FALSE)
knitr::opts_chunk$set(warning =  FALSE)
knitr::opts_chunk$set(error =  FALSE)
bfcolor <- function(x, color) {
  if (knitr::is_latex_output()) {
    sprintf("\\textcolor{%s}{\\textbf{%s}}", color, x)
  } else if (knitr::is_html_output()) {
    sprintf("<span style='color: %s;'><b>%s</b></span>", color, x)
  } else x
}
```

::: callout
**STUDENT NAMES**

-   Kai Barker (kaibarker)
-   Luke Drushell (drushell)
-   Rafael Romero (romeroflores)
:::

::: callout-tip
# Instructions

-   This mini project aims to familiarize you with real-life data sourced from various resources.

-   The mini project includes narrative questions. While these questions are primarily based on lecture material and prerequisites, they may also require independent thinking and investigation.

-   Collaborate in groups of **2-3** students from the **same section**; individual submissions **will not be accepted**.

-   Please use the provided `MP 1.qmd` file to type your solutions and submit the completed assignment as a PDF file. You can utilize `RStudio`for this purpose. For guidance, refer to the [Tutorial: Hello, Quarto](https://quarto.org/docs/get-started/hello/rstudio.html)).

-   Submit your answers via **Gradescope**.

-   Ensure that all `R` code, mathematical formulas, and workings are presented clearly and appropriately.

-   All figures should be numbered, and axes must be labeled.
:::

::: callout-caution
# Due Date

**Due Date:** Sunday, May 4, 2025, 11:59 PM
:::

```{r}
library(readxl)
library(ggplot2)
library(dplyr)
library(writexl)
```

\newpage

::: callout-tip
# Survey (Use the attached 'Survey.xlsx' file)

The data was collected during the first lecture from 85 students in the PSTAT 100 class in Spring 2025. The survey has 6 main sections namely Personal Information, Physical Measurements, Health Habits, Diet and Nutrition, Mental Health and Stress, and Academic Life.

These sections are interconnected - for example, physical measurements may relate to health habits and diet, while academic life may impact mental health and sleep patterns.The goal is to explore the relevant variables that may affect students' performance.
:::

::: callout-important
# **Question 1**

Based on your understanding of the collected data, propose three questions or hypotheses that can be explored or tested using the data.
:::

`r bfcolor("ANSWERS TO QUESTION 1:", "red")`

From the collected data, there are many hypothesis that could be tested. Three that stood out were, is there a correlation between the hours of sleep that students get, and their level of stress? Is there a relationship between the number of hours a student spends studying and their GPA? Is there a relationship between the students stress level, and the amount of times they get exercise each week?

\newpage

::: callout-important
# **Question 2**

Load the data into `R`, obtain basic descriptive statistics for the numerical variables, and provide your interpretation of the results.
:::

`r bfcolor("ANSWERS TO QUESTION 2:", "red")`\

```{r}
survey_data <- read_excel("Survey.xlsx")

#rename height since its spelled wrong
survey_data$Height <- survey_data$Heigh

head(survey_data)

summary(survey_data$Weight)
summary(survey_data$Height)
summary(survey_data$GPA)
#talk about these
```

We can see from the dataset that there is only three numerical variables. While many of the variables include numerical values, and value that can be categorized, such as the number of meals per day, does not count as a numerical variable. Further, students stress level was determined to not be a numerical variable as it was not continuous, and was limited to only ten options. Thus our numerical variables were Weight, Height, and GPA.

We can observe that the Weight variable had a minimum value of 106 and a maximum value of 309, with a mean value of 159. A challenge with this data is that not all responses may be in the same units, or honest. With that in mind, our mean could be more affected by the maximum and minimum values.

For the height variable...

From the summary of students GPA, we can observe that there was a minimum GPA of 1.3, and a maximum GPA of 4.0, with a mean of 3.478 and 3 missing values. The missing values are likely due to students who did not want to report their GPA. Further, some students may not have been honest in their responses, skewing the data. However, the mean GPA value seems plausible in a real world context.

\newpage

::: callout-important
# **Question 3**

a- Identify any missing values in the `Survey` dataset.

b- Assess the missing data mechanism in the dataset.

c- How would you handle the identified missing values? Save the treated dataset as `SurveyMissing`?

d- Can you address any potential bias for this missing values?
:::

`r bfcolor("ANSWERS TO QUESTION 3:", "red")`\

**a)**

From the dataset, we can see that there are some missing values in the Alcohol, GPA, Health columns.

**b)**

**c)**

To handle the missing values in the dataset, we can

**d)**

```{r}

```

\newpage

::: callout-important
# **Question 4**

a- Detect and handle outliers in the `Weight` variable of the dataset.

i- Justify your outlier detection method (e.g., IQR, Z-score, or visual inspection) and explain your chosen handling strategy (e.g., winsorization, capping, or removal).

ii -Discuss the potential impact of these outliers on the analysis if left unaddressed.
:::

`r bfcolor("ANSWERS TO QUESTION 4:", "red")`\

**Detect Outliers:** With a boxplot we can locate outliers by analyzing the whiskers of the plot and noticing the points that lie outside of them. 
```{r}
boxplot(survey_data$Weight, main="Boxplot of Weight", col ="blue",ylab= "Weight (lb)")
```
We notice two outliers that fall outside the whiskers. Above the 230 mark with `visual inspection`.

**Handling Strategy:** We can simply remove the outliers over the weight of 230 since they are extreme and do not accurately represent the population. 
```{r}
upper_limit<- 230
survey_data_no_outliers <- survey_data[survey_data$Weight < upper_limit, ]
boxplot(survey_data_no_outliers$Weight,main="Boxplot of Weight w/ No Outliers", col ="pink",ylab= "Weight (lb)")
```
**Consequences of Outliers:** Outliers can have a great impact on the results of our analysis as they can `affect our mean, variance, and standard deviation` by providing an inaccurate measure due to an inflation or deflation of our statistics. Also, they can cause our results to be `biased` or lead to `inaccurate p-values` if they violate statistical test assumptions such as normality. 


\

\newpage

::: callout-important
# **Question 5**

Investigate the relationship between sleep duration (`Sleep`) and perceived stress levels (`Stress`). Address the following:

a- Calculate the average stress level for each sleep duration category and comment.

b- Do certain sleep ranges (e.g., "4â€“6 hours") correlate with higher/lower stress?

c- Use a boxplot to compare stress distributions across sleep categories and comment!
:::

`r bfcolor("ANSWERS TO QUESTION 5:", "red")`\

To investigate the relationship between sleep duration and perceived stress levels, with must first calculate **the average stress for each sleep duration category**.
```{r}

survey_data %>% select(Sleep, Stress) %>%
  group_by(Sleep) %>%
  summarise("Average Stress Level by Group" = mean(Stress))
```

**Comments:** We notice that on average, those who sleep less than 4 hours have the highest stress level of 10. We can also notice that those who sleep more than 8 hours have the lowest average stress level. 

We can also look at a **boxplot** to visualize how the stress level changes based on sleep.
```{r}


survey_data %>% ggplot(aes(y=Stress,x=Sleep,fill=Sleep)) +
  geom_boxplot() +
    labs(title = "Stress Distribution Across Sleep Categories", 
       x = "Sleep Duration", 
       y = "Perceived Stress Level") +
  theme_minimal() + 
  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for readability

```
**Conclusion:** We can confidently state that there is a significant correlation between an increase in sleep duration and and decrease in perceived stress levels. 4-6 hours of sleep and less than 4 hours of sleep have the highest amount of perceived stress levels, which supports this claim. It is important to note, though, that 6-8 hours of sleep and more than 8  hours of sleep have notably long whiskers, which indicates that although they are getting good sleep, some may still be experiencing high stress levels. Regardless, their average stress level is still significantly lower than these stress levels, which again supports the correlation between high sleep duration and lower stress levels.


\newpage

::: callout-important
# **Question 6**

Create a visualization to show the distribution of Weight, comment!
:::

```{r}
survey_data_revisions <- read_excel("Survey.xlsx")

ggplot(survey_data_revisions, aes(x = Weight)) +
  geom_histogram(binwidth = 5, fill = "cyan", color = "orange") +
  labs(title = "Distribution of Weight",
       x = "Weight",
       y = "Frequency")
```

While there is evidently one outlier, what is much more interesting is the dip found around 150, it seems a lot of people hang just below and just above that range, but very infrequently actually in that area. \

\newpage

::: callout-important
# **Question 7**

a.  Define a new variable BMI = $\left(\frac{\text{Weight (lb)}}{\text{Height (in)}^2} \right) \times 703$, and classify students into BMI categories based on Centers for Disease Control and Prevention (CDC) guidelines:

-   BMI \< 18.5 â†’ `"Underweight"`\
-   18.5 â‰¤ BMI \< 25 â†’ `"Normal"`\
-   25 â‰¤ BMI \< 30 â†’ `"Overweight"`\
-   BMI â‰¥ 30 â†’ `"Obese"`

b- Visualize and describe the distribution of students' BMI categories using a bar chart.

c- Explore the correlations between **BMI**, **GPA**, and **Stress**. Use visualizations and correlation statistics to summarize the relationships.
:::

Starting by standardizing the height to inches:

```{r}


# Adjust the height column
survey_data_revisions$Heigh <- sapply(survey_data_revisions$Heigh, function(h) {
  if (h < 3) {
    # they typed in meters
    return(h * 39.3701)
  } else if (h < 30) {
    # ft.inches format (5.11 means 5 feet 11 inches)
    
    parts <- strsplit(as.character(h), "\\.")[[1]]
    feet <- as.numeric(parts[1])
    inches <- ifelse(length(parts) > 1, as.numeric(parts[2]), 0)
    
    # adjust if they had the audacity to put partial inches
    if (inches >= 12) { inches <- inches/10 }
    
    
    return(feet * 12 + inches)
  } else if (h >= 30 && h < 100) {
    # already in inches
    return(h)
  } else if (h >= 100 && h < 350) {
    # they typed in centimeters
    return(h * 0.393701)
  } else {
    # ftin format (511 means 5 feet 11 inches)
    
    h_str <- as.character(h)
    feet <- as.numeric(substr(h_str, 1, 1))
    inches <- as.numeric(substr(h_str, 2, nchar(h_str)))
    
    # adjust if they had the audacity to put partial inches
    if (inches >= 12) { inches <- inches/10 }
    
    return(feet * 12 + inches)
  }
})

write_xlsx(survey_data_revisions, "Survey_Height_Revised.xlsx")
```

a\)

```{r}
BMI <- survey_data_revisions$Weight / survey_data_revisions$Heigh^2 * 704
```

b\)

```{r}
bmi_category <- cut(
  BMI,
  breaks = c(-Inf, 18.5, 25, 30, Inf),
  labels = c("Underweight", "Normal", "Overweight", "Obese")
)

bmi_dataframe <- data.frame(Category = bmi_category)

ggplot(bmi_dataframe, aes(x = Category)) +
  geom_bar(fill = "cyan") +
  labs(title = "BMI", x = "BMI Category", y = "Count")
```

c\) Explore the correlations between **BMI**, **GPA**, and **Stress**. Use visualizations and correlation statistics to summarize the relationships.

```{r}

Stress <- survey_data_revisions$Stress
GPA <- survey_data_revisions$GPA

ggplot(survey_data_revisions, aes(x = BMI, y = Stress)) +
  geom_point(color = "cyan") +
  geom_smooth(method = "lm", se = FALSE, color = "orange") +
  labs(title = "Correlation between BMI and Stress",
       x = "BMI",
       y = "Stress Level")

ggplot(survey_data_revisions, aes(x = BMI, y = GPA)) +
  geom_point(color = "cyan") +
  geom_smooth(method = "lm", se = FALSE, color = "orange") +
  labs(title = "Correlation between BMI and GPA",
       x = "BMI",
       y = "GPA")
```
